<h2 class="page-header">Dashboard</h2>

<div class="row">
    <!-- LOCAL INFORMATION -->
    <div class="col-sm-6">
        <div class="well">
            <h3><span class="fa fa-user"></span> Hello "{{ user.name }}" </h3>
            <form method="post" action="/">
                <div class="form-group">
                    <input type="hidden" name="_id" value="{{user._id}}">

                    <!--TODO make placeholder current data-->
                    <!--TODO place input on the same line as the label-->
                    <!--TODO Change password option???-->


                    <!--General Information-->
                    <label>Name</label>
                    <input type="text" class="form-control" placeholder="{{user.name}}" name="name">

                    <label>Mirror ID</label>
                    <input type="text" class="form-control" placeholder="{{user.mirrorID}}" name="mirrorID">


                    <!-- To do List   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  -->
                    <br><br>
                    <label>To Do List</label>
                    <input type="text" class="form-control" placeholder="Eat In n Out" name="new_todolist">
                    <input type="hidden" name="to_do_list" id="to_do_list"  value="{{user.to_do_list}}">

                    <div id="myDIV" class="header">
                        <h2>My To Do List</h2>

                        <input type="text" id="myInput" placeholder="Title...">
                        <span onclick="newElement()" class="addBtn">Add</span>
                    </div>

                    <ul id="myUL">
                    </ul>


                    <!-- Stocks  -->
                    <br><br>
                    <label>My Stocks</label>
                    <input type="text" class="form-control" placeholder="Eat In n Out" name="new_stocks">
                    <input type="hidden" name="stocks" id="stocks"  value="{{user.stocks}}">

                    <div id="myDIV" class="header">
                        <h2>My Stocks</h2>

                        <input type="text" id="stock_input" placeholder="Title...">
                        <span onclick="newStockElement()" class="addBtn">Add</span>
                    </div>

                    <ul id="stock_UL">
                    </ul>



                    <!-- Maps -->
                    <br><br>
                    <Label>Home Address</Label>
                    <br>

                    <label>Street</label>
                    <input type="text" class="form-control" placeholder="{{user.maps_origin_street_address}}" name="maps_origin_street_address">

                    <label>City</label>
                    <input type="text" class="form-control" placeholder="{{user.maps_origin_city_address}}" name="maps_origin_city_address">

                    <label>State</label>
                    <input type="text" class="form-control" placeholder="{{user.maps_origin_state_address}}" name="maps_origin_state_address">


                    <br><br>
                    <label>Work Address</label>
                    <br>
                    <label>Street</label>
                    <input type="text" class="form-control" placeholder="{{user.maps_destination_street_address}}" name="maps_destination_street_address">

                    <label>City</label>
                    <input type="text" class="form-control" placeholder="{{user.maps_destination_city_address}}" name="maps_destination_city_address">

                    <label>State</label>
                    <input type="text" class="form-control" placeholder="{{user.maps_destination_state_address}}" name="maps_destination_state_address">

                    <br><br>
                    <label>Google Map Settings</label>
                    <br>
                    <label>Avoid Tolls : "{{user.maps_settings_avoid_tolls}}"</label>
                    <br>
                    <select name="maps_settings_avoid_tolls">
                        <option value="" disabled selected>Select your option</option>
                        <option value="yes">Yes</option>
                        <option value="no">No</option>
                    </select>

                    <label>Mode: "{{user.maps_settings_mode}}"</label>
                    <br>
                    <select name="maps_settings_mode">
                        <option value="" disabled selected>Select your option</option>
                        <option value="blue">Blue</option>
                        <option value="red">Red</option>
                    </select>

                    <label>Transit Mode: "{{user.maps_settings_transit_mode}}"</label>
                    <br>
                    <select name="maps_settings_transit_mode">
                        <option value="" disabled selected>Select your option</option>
                        <option value="car">Car</option>
                        <option value="subway">Subway</option>
                    </select>


                    <!-- Mirror Settings-->
                    <br><br>
                    <label>Color: "{{user.color}}"</label>
                    <br>
                    <select name="color">
                        <option value="" disabled selected>Select your option</option>
                        <option value="blue">Blue</option>
                        <option value="red">Red</option>
                    </select>

                    <label>Font Size: "{{user.fontSize}}"</label>
                    <select name="fontSize"  >
                        <option value="" disabled selected>Select your option</option>
                        <option value="large">Large</option>
                        <option value="medium">Medium</option>
                        <option value="small">Small</option>
                    </select>


                    <!-- Api Keys -->
                    <br><br><label>API Keys</label><br>
                    <label>Google Distance Matrix</label>
                    <input type="text" class="form-control" placeholder="{{user.google_distance_matrix_key}}" name="google_distance_matrix_key">

                    <label>Google Geocode</label>
                    <input type="text" class="form-control" placeholder="{{user.google_geocode_key}}" name="google_geocode_key">

                    <label>Dark Sky Weather</label>
                    <input type="text" class="form-control" placeholder="{{user.dark_sky_weather_key}}" name="dark_sky_weather_key">
                    
                </div>
                <button type="submit" class="btn btn-default">Submit</button>
            </form>
        </div>

    </div>
</div>


<!--These scripts will be used to add list items to "todolist" and "stocks"-->
<script>
    // Create a "close" button and append it to each list item
//    var myNodelist = document.getElementsByTagName("LI");
//    var i;
//    for (i = 0; i < myNodelist.length; i++) {
//        if(String(myNodelist[i]).includes('presentation')){
//            console.log(myNodelist[i])
//        }
//        var span = document.createElement("SPAN");
////        TODO CANNOT CLOSE DASHBOARD AND LOGOUT
//        var txt = document.createTextNode("\u00D7");
//        span.className = "close";
//        span.appendChild(txt);
//        myNodelist[i].appendChild(span);
//    }

    // Click on a close button to hide the current list item
    var close = document.getElementsByClassName("close");

    // Add a "checked" symbol when clicking on a list item
    var list = document.querySelector('ul');
    list.addEventListener('click', function(ev) {
        if (ev.target.tagName === 'LI') {
            ev.target.classList.toggle('checked');
        }
    }, false);

    // Create list of existing to do items
    var prev_todo_items = document.getElementById("to_do_list").value.split("////");
    prev_todo_items.forEach(function(to_do_item) {
        newElement(to_do_item);
        console.log(to_do_item);
    });

    // Create a new list item when clicking on the "Add" button
    function newElement(string) {
        var li = document.createElement("li");
        var inputValue;

        // Check to see if an input value is being passed to this function
        if (string) {
            inputValue = string;  // Create Todo list from Database
        } else {
            inputValue = document.getElementById("myInput").value;  // Added from the UI
            if (document.getElementById("to_do_list").value  == '') {
                document.getElementById("to_do_list").value += ( inputValue);  // First one cannot have "////"  i.e.   a////b////c
            } else {
                document.getElementById("to_do_list").value += ('////' + inputValue);
            }
        }

        // Retrieve information from the HTML form (FOUND THIS STUFF ONLINE)
        var t = document.createTextNode(inputValue);
        li.appendChild(t);
        if (inputValue === '') {
//            alert("You must write something!");
        } else {
            document.getElementById("myUL").appendChild(li);
        }
        document.getElementById("myInput").value = "";
        var span = document.createElement("SPAN");
        var txt = document.createTextNode("\u00D7");
        span.className = "close";
        span.appendChild(txt);
        li.appendChild(span);
        var input = document.createElement("input");

        // Remove the item from the list when clicked
        for (i = 0; i < close.length; i++) {
            close[i].onclick = function () {
                // Make the HTML element disappear
                var div = this.parentElement;
                var removed_string = div.innerHTML.split('<span')[0];
                div.style.display = "none";

                // Retrieve the current list of elements from the database
                var prev_todo_items = document.getElementById("to_do_list").value.split("////");

                // Recreate the list of current elements but do not include item to be removed
                document.getElementById("to_do_list").value = '';
                prev_todo_items.forEach(function(to_do_item) {
                    if(to_do_item !== removed_string){
                        if (document.getElementById("to_do_list").value == ''){
                            document.getElementById("to_do_list").value += (to_do_item);  // First one cannot have "////"  i.e.   a////b////c
                        } else {
                            document.getElementById("to_do_list").value += ('////' + to_do_item);
                        }
                    }
                });

            }
        }
    }
</script>

<!------------------------------------------------------------------------------------------------------------------->

<!--These scripts will be used to add list items to "STOCKS" and "stocks"-->
<script>
    // Create list of existing to do items
    var prev_stocks = document.getElementById("stocks").value.split("////");
    prev_stocks.forEach(function(stock) {
        newStockElement(stock);
        console.log(stock);
    });

    // Create a new list item when clicking on the "Add" button
    function newStockElement(string) {
        var li = document.createElement("li");
        var inputValue;

        // Check to see if an input value is being passed to this function
        if (string) {
            inputValue = string;  // Create Todo list from Database
        } else {
            inputValue = document.getElementById("stock_input").value;  // Added from the UI
            if (document.getElementById("stocks").value  == '') {
                document.getElementById("stocks").value += ( inputValue);  // First one cannot have "////"  i.e.   a////b////c
            } else {
                document.getElementById("stocks").value += ('////' + inputValue);
            }
        }

        // Retrieve information from the HTML form (FOUND THIS STUFF ONLINE)
        var t = document.createTextNode(inputValue);
        li.appendChild(t);
        if (inputValue === '') {
//            alert("You must write something!");
        } else {
            document.getElementById("stock_UL").appendChild(li);
        }
        document.getElementById("myInput").value = "";
        var span = document.createElement("SPAN");
        var txt = document.createTextNode("\u00D7");
        span.className = "close";
        span.appendChild(txt);
        li.appendChild(span);
        var input = document.createElement("input");
        var t2 = document.createTextNode(inputValue);

        // Remove the item from the list when clicked
        for (i = 0; i < close.length; i++) {
            close[i].onclick = function () {
                // Make the HTML element disappear
                var div = this.parentElement;
                var removed_string = div.innerHTML.split('<span')[0];
                div.style.display = "none";

                // Retrieve the current list of elements from the database
                var prev_stocks = document.getElementById("stocks").value.split("////");

                // Recreate the list of current elements but do not include item to be removed
                document.getElementById("stocks").value = '';
                prev_stocks.forEach(function(stock) {
                    if(stock !== removed_string){
                        if (document.getElementById("stocks").value == ''){
                            document.getElementById("stocks").value += (stock);  // First one cannot have "////"  i.e.   a////b////c
                        } else {
                            document.getElementById("stocks").value += ('////' + stock);
                        }
                    }
                });

            }
        }
    }
</script>